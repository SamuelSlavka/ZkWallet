version: '3'

services:
  server:  
    build:
      context: ./Server
      dockerfile: Dockerfile
    restart: unless-stopped
    ports: 
      - '5000:5000'
    volumes:
      - ./Server:/src
    networks:
      - app-network


  nginx:
    image: webapp-nginx
    build:
      context: ./Nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - server
    networks:
      - app-network

  postgres:
    image: postgres:10.5
    restart: unless-stopped
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - '5432'
    ports:
      - 5432:5432
    links:
      - server
    networks:
      - app-network
    volumes: 
      - ./postgres-data:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 8080:8080

  ethereum-geth:
    build:
      context: ./Geth
      dockerfile: Dockerfile
    user: "$USER:$GROUP"
    volumes:
      - ./Geth:/home/aladdin/.ethereum
      - '/etc/passwd:/etc/passwd:ro'
      - '/etc/group:/etc/group:ro'
    ports:
      # HTTP server / GraphQL API
      - 8545:8545
      # WebSocket
      - 8546:8546
      # Network listening port (P2P networking)
      - 30303:30303
    command:
      [
        "--syncmode=light",
        # Megabytes of memory allocated to internal caching
        "--cache=8192",
        "--ws",
        "--ws.addr=0.0.0.0",
        "--http",
        "--http.addr=0.0.0.0",
        "--http.vhosts=*",
        "--graphql",
        "--graphql.vhosts=*",
        # Enable metrics collection and reporting
        "--metrics",
        # Ethereum network
        "--rinkeby",
        # Maximum number of network peers (network disabled if set to 0) (default: 50)
        "--maxpeers=30",
        # Data directory for the databases and keystore (default: "/root/.ethereum")
        "--datadir=/home/aladdin/.ethereum"
      ]

networks:
  app-network:
    driver: bridge